/** 
 * 
 */
package model

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import java.util.Random

/** 
 * @author morzzan
 * 
 */
agent UAVAgent {
	var rd = new Random
	var currentPercept : PerceptEvent
	uses Logging, DefaultContextInteractions, Lifecycle
	var nb : int
	on Initialize {
		nb = occurrence.parameters.get(0) as Integer
		loggingName = " Drone " + nb.toString
		info("The UAV was started.")
		emit(new RegisterEvent(nb))
	}
	on PerceptEvent {
		info("Env told me I'm at " + occurrence.pos+ " and i see "+ occurrence.around.size + " drones")
		currentPercept = occurrence
		moveRandomly
	}
	on EndEvent{	
			killMe
	} 
	
	def moveRandomly{
		move(Vector3D.randomDirection())
	}

	def move(v : Vector3D) : void{
		emit(new GoThatWay(v.add(separation)))
	}
	def separation{
		var vSep = new Vector3D(0,0,0)
		for (o : currentPercept.around) {
			var n = o.add(currentPercept.pos.times(-1))
			if (n.norm === 0) {	
				n= Vector3D.randomDirection
			}
			var a = n.unitarize.times(-100 / Math.pow(n.norm, 2))
			vSep = vSep.add(a)	
		}
		return vSep
	}
}

