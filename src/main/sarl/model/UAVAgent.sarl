/** 
 * 
 */
package model

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle
import io.sarl.core.Logging
import java.util.Random

/** 
 * @author morzzan
 * 
 */
agent UAVAgent {
	uses Logging, DefaultContextInteractions, Lifecycle
	var nb : int
	on Initialize {
		nb = occurrence.parameters.get(0) as Integer
		loggingName = " Drone " + nb.toString
		info("The UAV was started.")
		emit(new RegisterEvent(nb))
	}
	on PerceptEvent {
		info("Env told me I'm at " + occurrence.pos)
		if(occurrence.around.size != 0)moveRandomly//move(separation(occurrence))
		else moveRandomly
	}
	on EndEvent{	
			killMe
	}
	
	def moveRandomly{
		emit(new GoThatWay((new Vector3D).randomDirection()))
	}

	def move(v : Vector3D) : void{
		emit(new GoThatWay(v))
	}
	def separation(percept : PerceptEvent) {
		var rd = new Random
		var vSep = new Vector3D(0,0,0)
		for (o : percept.around) {
			var n = o.add(percept.pos.times(-1))
			if (n.norm <= 1) {
				
				
				//info(new Vector3D(rd.nextDouble-1,rd.nextDouble-1,0).toString)
				}
			}
			
			//vSep.add(n.times(-1/n.norm))
		return vSep.normalize
	}
}

